import matplotlib.pyplot as plt
from collections import defaultdict
from IPython.display import display, HTML
import pandas as pd

category_keywords_ru = {
    'языковые': [
        
        'вставь', 'подчеркни', 'выбери', 'заполни', 'соедини', 'обозначь ударение',
        'раскрась', 'выпиши', 'найди пары', 'обведи', 'дополни', 'впиши', 'поставь слова',
        'перепиши', 'прочитай', 'спой песенку', 'сопровождая её движениями',
        'соотнеси слова с картинками', 'закончи предложения', 'вставляя слово',
        'вставь пропущенное слово', 'выбери нужный предлог', 'прочитайте по ролям',
        'повтори за диктором', 'выучи', 'выполни движения', 'повтори действия',
        'повтори движение', 'повтори слова', 'слова из песни',
        'назови предмет', 'слушай и повторяй за', 'найди лишнее слово',
        'повтори этот звук за диктором',
        'составь рифмовку с новыми словами',
        'попробуй прочитать',
        'послушай аудиозапись и повтори',
        'послушай и повтори их',
        'попробуй повторить рифмовку',
        'посмотри на рисунки и найди',
        'послушай рифмовку и повтори её за диктором', "распредели слова",
        'послушай и повтори', "послушай как по-английски", "повтори звуки и слова"
    ],
    'коммуникативные': [
        
        'составь диалог', 'задумай слово', 'работай в паре', 'разыграй диалог', 'сделай из двух предложений одно',
        'ответь на вопросы', 'задай вопросы', 'продолжи диалог', 'поговори с одноклассником',
        'поиграй', 'обсуди', 'закончи диалог', 'поиграй в роли', 'диалог',
        'прочитай и напиши', 'подбери', 'скажи, кто это', 'расскажи, что ты видишь', 'научись отвечать',
        'опиши героя', 'опиши картинку', 'скажи, где находится', 'скажи, что у него есть',
        'работа в парах', 'прочитайте друг другу слова', 'расскажите, что изображено',
        'сделай табличку', 'сделай открытку', 'сделай маску', 'опиши своего персонажа',
        'угадай', 'опиши', 'скажи, что видишь', 'скажи, кто это',
        'опиши, как одет', 'вставь фразу', 'ответь на вопросы по сценке', "что ты можешь сказать",
        'назови по-английски',
        'прочитай и составь', "посмотри на картинки и дай характеристики", "закончи эти фразы", "прослушай песенку и спой",
        'расскажи', 'поделись впечатлениями', 'представь себя', 'поговори о', 'придумай историю', 'расскажи о',
        'поприветствуй', 'поговори', 'скажи', 'расскажи, как провёл день', 'пожелай',
        'расскажи о празднике', 'напиши письмо', 'театральная сценка', 'сыграй роль',
        'поделись мечтой', 'расскажи о себе', 'выскажи своё мнение', 'расскажи о питомце', 'что ты хочешь',
        'пожелай на день рождения', 'представь', 'пожелай', 'скажи, что ты хочешь',
        'предложи', 'убеди', 'опиши свою комнату', 'расскажи историю',
        'пригласи друга', 'пожелай кому-то что-то', 'выскажи чувства',
        "сыграйте в игру", "придумайте название", 'разыграйте', 'назови того', 'изобрази',
        'угадают', 'назови эти слова', "поработайте в парах", "в группах по", "сделай презентацию"
    ]
}

# Счётчики
category_counts = defaultdict(int)
unclassified_exercises = []

def classify_exercise(text_line, keyword_dict):
    text_line = text_line.lower()
    for category in keyword_dict:
        for keyword in keyword_dict[category]:
            if keyword in text_line:
                return category
    return 'unclassified'

classified_data = []

with open('/content/spotlight2.txt', 'r', encoding='utf-8') as file:
    for line in file:
        line = line.strip()
        if not line:
            continue

        category = classify_exercise(line, category_keywords_ru)

        if category != 'unclassified':
            category_counts[category] += 1
            classified_data.append({
                'Упражнение': line,
                'Тип задания': category
            })
        else:
            unclassified_exercises.append(line)

# Сохраняем в CSV
df = pd.DataFrame(classified_data)
df.to_csv('/content/22cl.csv', index=False, encoding='utf-8-sig')

unclassified_df = pd.DataFrame(unclassified_exercises, columns=['Упражнение'])
unclassified_df.to_csv('/content/22unck.csv', index=False, encoding='utf-8-sig')

# Отображение таблицы
display(df.head(10))

# Заголовок
text = "Учебник Spotight 2 класс"
display(HTML(f'<p style="font-family: Times New Roman; font-size: 20px; font-weight: bold;">{text}</p>'))

# Визуализация
plt.figure(figsize=(6, 6))
category_counts.pop('unclassified', None)
plt.pie(category_counts.values(), labels=category_counts.keys(), autopct='%1.1f%%', startangle=140, colors=plt.cm.Pastel1.colors)
plt.title('Распределение типов упражнений')
plt.show()

# Статистика
print("\nРаспределение типов упражнений:")
for category in category_keywords_ru:
    print(f"{category.capitalize()}: {category_counts.get(category, 0)}")

print(f"\nНе классифицировано: {len(unclassified_exercises)} строк.")



